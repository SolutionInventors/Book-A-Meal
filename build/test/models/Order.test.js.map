{"version":3,"sources":["../../../server/test/models/Order.test.js"],"names":["describe","orderarr","customer","date","order","it","isObject","isTrue","isDefined","typeOf","id","isValid"],"mappings":";;AACA;;AACA;;;;;;AAFA;AAIAA,SAAS,MAAT,EAAiB,YAAM;AACrB,MAAMC,WAAW,CAAC,OAAD,EAAU,IAAV,CAAjB;AACA,MAAMC,WAAW,WAAjB;AACA,MAAMC,OAAO,KAAb;;AAGA,MAAMC,QAAQ,oBAAUH,QAAV,EAAoBC,QAApB,EAA8BC,IAA9B,CAAd;AACAH,WAAS,wBAAT,EAAmC,YAAM;AACvCK,OAAG,uCAAH,EAA4C,YAAM;AAChD,mBAAOC,QAAP,CAAgBF,KAAhB;AACD,KAFD;;AAIAC,OAAG,iDAAH,EAAsD,YAAM;AAC1D,mBAAOE,MAAP,CAAcH,gCAAd;AACD,KAFD;AAGD,GARD;;AAUAC,KAAG,2DAAH,EAAgE,YAAM;AACpE,iBAAOG,SAAP,CAAiBJ,MAAMD,IAAvB;AACD,GAFD;;AAIAE,KAAG,4DAAH,EAAiE,YAAM;AACrE,iBAAOG,SAAP,CAAiBJ,MAAMA,KAAvB;AACD,GAFD;;AAIAC,KAAG,+BAAH,EAAoC,YAAM;AACxC,iBAAOI,MAAP,CAAcL,MAAMD,IAApB,EAA0B,QAA1B;AACD,GAFD;;AAKAE,KAAG,uBAAH,EAA4B,YAAM;AAChC,iBAAOG,SAAP,CAAiBJ,MAAMM,EAAvB;AACD,GAFD;;AAIAL,KAAG,yCAAH,EAA8C,YAAM;AAClD,iBAAOG,SAAP,CAAiBJ,MAAMO,OAAvB;AACD,GAFD;;AAIAN,KAAG,yCAAH,EAA8C,YAAM;AAClD,iBAAOE,MAAP,CAAcH,MAAMO,OAApB;AACD,GAFD;;AAKAN,8CAA0CJ,QAA1C,EAAsD,YAAM;AAC1D,iBAAOM,MAAP,CAAcH,MAAMA,KAAN,IAAeH,QAA7B;AACD,GAFD;;AAIAI,iDAA6CH,QAA7C,EAAyD,YAAM;AAC7D,iBAAOK,MAAP,CAAcH,MAAMF,QAAN,IAAkBA,QAAhC;AACD,GAFD;AAGAG,6CAAyCF,IAAzC,EAAiD,YAAM;AACrD,iBAAOI,MAAP,CAAcH,MAAMD,IAAN,IAAcA,IAA5B;AACD,GAFD;AAGD,CArDD","file":"Order.test.js","sourcesContent":["/* eslint no-undef : \"warn\" */\r\nimport { assert } from 'chai';\r\nimport Order from '../../models/Order';\r\n\r\ndescribe('menu', () => {\r\n  const orderarr = ['item1', 'fh'];\r\n  const customer = 'customer1';\r\n  const date = 'chi';\r\n\r\n\r\n  const order = new Order(orderarr, customer, date);\r\n  describe('value of instanciation', () => {\r\n    it('expects created value to be an object', () => {\r\n      assert.isObject(order);\r\n    });\r\n\r\n    it('expects created value to be a subclass of order', () => {\r\n      assert.isTrue(order instanceof Order);\r\n    });\r\n  });\r\n\r\n  it('expects created value to be a  to have an date attribute ', () => {\r\n    assert.isDefined(order.date);\r\n  });\r\n\r\n  it('expects created value to be a  to have an order attribute ', () => {\r\n    assert.isDefined(order.order);\r\n  });\r\n\r\n  it('expects  value to be a string', () => {\r\n    assert.typeOf(order.date, 'string');\r\n  });\r\n\r\n\r\n  it('expects to return id ', () => {\r\n    assert.isDefined(order.id);\r\n  });\r\n\r\n  it('expects created value to be a  boolean ', () => {\r\n    assert.isDefined(order.isValid);\r\n  });\r\n\r\n  it('expects created value to be a  boolean ', () => {\r\n    assert.isTrue(order.isValid);\r\n  });\r\n\r\n\r\n  it(`expects creted value of order to be ${orderarr}`, () => {\r\n    assert.isTrue(order.order == orderarr);\r\n  });\r\n\r\n  it(`expects creted value of customer to be ${customer}`, () => {\r\n    assert.isTrue(order.customer == customer);\r\n  });\r\n  it(`expects creted value of date to be ${date}`, () => {\r\n    assert.isTrue(order.date == date);\r\n  });\r\n});\r\n"]}