{"version":3,"sources":["../../server/controllers/orderController.js"],"names":["OrderController","req","resp","errorCallback","status","json","success","message","orders","getOrdersByDate","body","customerId","mealsIdArr","order","meals","console","log","orderObj","notValid","noMenu","err","makeOrder","messge","orderId","modify"],"mappings":"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","file":"orderController.js","sourcesContent":["import orderService from '../services/orderService';\r\n\r\nexport default class OrderController {\r\n  getTodayOrders(req, resp) {\r\n    const errorCallback = (() => {\r\n      resp.status(500).json({\r\n        success: false,\r\n        message: 'An error occured while processing your request',\r\n      });\r\n    });\r\n\r\n    const success = (orders) => {\r\n      if (orders) {\r\n        resp.status(200).json({\r\n          success: true,\r\n          orders,\r\n        });\r\n      } else {\r\n        resp.status(204).json({\r\n          success: true,\r\n          message: 'No orders have been made today',\r\n        });\r\n      }\r\n    };\r\n    orderService.getOrdersByDate(success, errorCallback);\r\n  }\r\n\r\n  makeOrder(req, resp) {\r\n    const { body: { customerId, mealsIdArr } } = req;\r\n\r\n    if (customerId && mealsIdArr) {\r\n      const success = (order, meals) => {\r\n        console.log(meals);\r\n        const orderObj = {\r\n          order,\r\n          meals,\r\n        };\r\n        resp.status(201).json({\r\n          success: true,\r\n          orderObj,\r\n        });\r\n      };\r\n      const notValid = () => {\r\n        resp.status(404).json({\r\n          success: false,\r\n          message: 'No meal id you specified was found in today\\'s menu',\r\n        });\r\n      };\r\n      const noMenu = () => {\r\n        resp.status(412).json({\r\n          success: false,\r\n          message: 'The meal of today has not yet been set',\r\n        });\r\n      };\r\n\r\n      const errorCallback = (err) => {\r\n        console.log(err);\r\n        resp.status(500).json({\r\n          success: false,\r\n          message: 'An unknown error occured while processing your request',\r\n        });\r\n      };\r\n      orderService.makeOrder(mealsIdArr, customerId, success, notValid, noMenu, errorCallback);\r\n    } else {\r\n      resp.status(400).json({\r\n        success: false,\r\n        messge: 'Some required fields are missing in body',\r\n      });\r\n    }\r\n  }\r\n\r\n  noRoute(req, resp) {\r\n    resp.status(404).json({\r\n      success: false,\r\n      message: 'An invalid route was specified',\r\n    });\r\n  }\r\n\r\n  modify(req, resp) {\r\n    const { body: { orderId, mealsIdArr } } = req;\r\n\r\n    if (mealsIdArr) {\r\n      const success = (order, meals) => {\r\n        if (meals && order) {\r\n          console.log(meals);\r\n          const orderObj = {\r\n            order,\r\n            meals,\r\n          };\r\n          resp.status(201).json({\r\n            success: true,\r\n            orderObj,\r\n          });\r\n        } else if (order === false) {\r\n          resp.status(404).json({\r\n            success: false,\r\n            message: 'The orderId you specified does not exist',\r\n          });\r\n        } else {\r\n          resp.status(400).json({\r\n            success: false,\r\n            message: 'No valid id was found in your mealsIdArr',\r\n          });\r\n        }\r\n      };\r\n\r\n      const errorCallback = (() => {\r\n        resp.status(500).json({\r\n          success: false,\r\n          message: 'An error occured while processing your request',\r\n        });\r\n      });\r\n      orderService.modify(orderId, mealsIdArr, success, errorCallback);\r\n    }\r\n  }\r\n}\r\n"]}