{"version":3,"sources":["../../server/controllers/menuController.js"],"names":["MenuController","req","resp","mealsIdArr","body","success","menuObj","meals","status","json","data","menuId","id","dateCreated","menuExists","message","noValidId","createTodayMenu","missingData","errorHandler","mealArr","createdObj","noMenu","updateTodayMenu","menu","notFound","getMenu"],"mappings":"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","file":"menuController.js","sourcesContent":["import menuService from '../services/menuService';\r\n\r\nexport default class MenuController {\r\n  create(req, resp) {\r\n    const { body: { mealsIdArr } } = req;\r\n\r\n    const success = (menuObj, meals) => {\r\n      resp.status(201).json({\r\n        success: true,\r\n        data: {\r\n          menuId: menuObj.id,\r\n          dateCreated: menuObj.dateCreated,\r\n          meals,\r\n        },\r\n      });\r\n    };\r\n\r\n    const menuExists = () => {\r\n      resp.status(409).json({\r\n        success: false,\r\n        message: 'The menu of today has already been created',\r\n      });\r\n    };\r\n\r\n    const noValidId = () => {\r\n      resp.status(422).json({\r\n        success: false,\r\n        message: 'There was no valid mealId in your mealsIdArr',\r\n      });\r\n    };\r\n\r\n\r\n    if (mealsIdArr) {\r\n      menuService.createTodayMenu(mealsIdArr, success, noValidId, menuExists);\r\n    } else {\r\n      resp.status(400).json({\r\n        success: false,\r\n        message: 'Some required fields are missing',\r\n        missingData: ['mealsIdArr'],\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  update(req, resp) {\r\n    const { body: { mealsIdArr } } = req;\r\n    if (mealsIdArr) {\r\n      const errorHandler = (() => {\r\n        resp.status(500).json({\r\n          success: false,\r\n          message: 'Error occured in server',\r\n        });\r\n      });\r\n      const success = (menuObj, mealArr) => {\r\n        const createdObj = {\r\n          menuId: menuObj.id,\r\n          meals: mealArr,\r\n        };\r\n        resp.status(201).json({\r\n          success: true,\r\n          createdObj,\r\n        });\r\n      };\r\n      const noMenu = () => {\r\n        resp.status(409).json({\r\n          success: false,\r\n          message: 'The menu of today has not yet been created',\r\n        });\r\n      };\r\n      const noValidId = () => {\r\n        resp.status(404).json({\r\n          success: false,\r\n          message: 'There was no valid mealId in your mealIdArr',\r\n        });\r\n      };\r\n\r\n      menuService.updateTodayMenu(mealsIdArr, success, noMenu, noValidId, errorHandler);\r\n    } else {\r\n      resp.status(400).json({\r\n        success: false,\r\n        message: 'Some required fields are missing',\r\n        missingData: ['mealsIdArr'],\r\n      });\r\n    }\r\n  }\r\n\r\n  retrieve(req, resp) {\r\n    const success = (menu) => {\r\n      resp.status(200).json({\r\n        success: true,\r\n        menu,\r\n      });\r\n    };\r\n    const notFound = () => {\r\n      resp.status(404).json({\r\n        success: false,\r\n        message: 'The specified menu of today has not yet been set',\r\n      });\r\n    };\r\n    menuService.getMenu(success, notFound);\r\n  }\r\n}\r\n\r\n"]}