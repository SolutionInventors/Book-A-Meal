{"version":3,"sources":["../../../server/test/models/User.test.js"],"names":["describe","email","name","pass","user","it","isObject","isTrue","isDefined","password"],"mappings":";;AAEA;;;;AACA;;;;AAFA;AAKAA,SAAS,SAAT,EAAoB,YAAM;AACxB,MAAMC,QAAQ,OAAd;AACA,MAAMC,OAAO,KAAb;AACA,MAAMC,OAAO,UAAb;AACA,MAAMC,OAAO,mBAASF,IAAT,EAAeD,KAAf,EAAsBE,IAAtB,CAAb;;AAGAE,KAAG,sCAAH,EAA2C,YAAM;AAC/C,iBAAOC,QAAP,CAAgBF,IAAhB;AACD,GAFD;;AAIAC,KAAG,kDAAH,EAAuD,YAAM;AAC3D,iBAAOE,MAAP,CAAcH,8BAAd;AACD,GAFD;;AAKAC,KAAG,2DAAH,EAAgE,YAAM;AACpE,iBAAOG,SAAP,CAAiBJ,KAAKH,KAAtB;AACD,GAFD;;AAIAI,KAAG,0DAAH,EAA+D,YAAM;AACnE,iBAAOG,SAAP,CAAiBJ,KAAKF,IAAtB;AACD,GAFD;;AAIAG,KAAG,8DAAH,EAAmE,YAAM;AACvE,iBAAOG,SAAP,CAAiBJ,KAAKK,QAAtB;AACD,GAFD;;AAKAJ,8CAA0CJ,KAA1C,EAAmD,YAAM;AACvD,iBAAOM,MAAP,CAAcH,KAAKH,KAAL,IAAcA,KAA5B;AACD,GAFD;;AAIAI,8CAA0CH,IAA1C,EAAkD,YAAM;AACtD,iBAAOK,MAAP,CAAcH,KAAKF,IAAL,IAAaA,IAA3B;AACD,GAFD;AAGAG,8CAA0CF,IAA1C,EAAkD,YAAM;AACtD,iBAAOI,MAAP,CAAcH,KAAKK,QAAL,IAAiBN,IAA/B;AACD,GAFD;AAGD,CAvCD","file":"User.test.js","sourcesContent":["\r\n/* eslint no-undef : \"warn\" */\r\nimport User from '../../models/User';\r\nimport { assert } from 'chai';\r\n\r\n\r\ndescribe('caterer', () => {\r\n  const email = 'email';\r\n  const name = 'chi';\r\n  const pass = 'password';\r\n  const user = new User(name, email, pass);\r\n\r\n\r\n  it('expects creted value to be an object', () => {\r\n    assert.isObject(user);\r\n  });\r\n\r\n  it('expects creted value to be a subclass of caterer', () => {\r\n    assert.isTrue(user instanceof User);\r\n  });\r\n\r\n\r\n  it('expects creted value to be a  to have an email attribute ', () => {\r\n    assert.isDefined(user.email);\r\n  });\r\n\r\n  it('expects creted value to be a  to have an name attribute ', () => {\r\n    assert.isDefined(user.name);\r\n  });\r\n\r\n  it('expects creted value to be a  to have an password attribute ', () => {\r\n    assert.isDefined(user.password);\r\n  });\r\n\r\n\r\n  it(`expects creted value of email to be ${email}`, () => {\r\n    assert.isTrue(user.email == email);\r\n  });\r\n\r\n  it(`expects creted value of email to be ${name}`, () => {\r\n    assert.isTrue(user.name == name);\r\n  });\r\n  it(`expects creted value of email to be ${pass}`, () => {\r\n    assert.isTrue(user.password == pass);\r\n  });\r\n});\r\n"]}