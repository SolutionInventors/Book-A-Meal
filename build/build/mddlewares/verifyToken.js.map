{"version":3,"sources":["../../server/mddlewares/verifyToken.js"],"names":["verifyToken","req","resp","next","bearerHeader","headers","authorization","splittedStr","split","token","validateToken","err","authData","status","json","success","message","user","console","log"],"mappings":";;;;;;;;kBAEwBA,W;;AAFxB;;;;;;AAEe,SAASA,WAAT,CAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsC;AACnD,MAAMC,eAAeH,IAAII,OAAJ,CAAYC,aAAjC;;AAEA,MAAI,OAAOF,YAAP,KAAwB,WAA5B,EAAyC;AACvC,QAAMG,cAAcH,aAAaI,KAAb,CAAmB,GAAnB,CAApB;;AADuC,sCAErBD,WAFqB;AAAA,QAE9BE,KAF8B;;AAGvCR,QAAIQ,KAAJ,GAAYA,KAAZ;AACA,gCAAcC,aAAd,CAA4BD,KAA5B,EAAmC,UAACE,GAAD,EAAMC,QAAN,EAAmB;AACpD,UAAID,GAAJ,EAAS;AACPT,aAAKW,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AACpBC,mBAAS,KADW;AAEpBC,mBAAS;AAFW,SAAtB;AAID,OALD,MAKO;AACLf,YAAIgB,IAAJ,GAAWL,QAAX;AACAM,gBAAQC,GAAR,CAAYP,QAAZ,EAAsB,UAAtB;AACAT;AACD;AACF,KAXD;AAYD,GAhBD,MAgBO;AACLD,SAAKW,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AACpBC,eAAS,KADW;AAEpBC,eAAS;AAFW,KAAtB;AAID;AACF","file":"verifyToken.js","sourcesContent":["import authenticator from '../services/authenticaticator';\r\n\r\nexport default function verifyToken(req, resp, next) {\r\n  const bearerHeader = req.headers.authorization;\r\n\r\n  if (typeof bearerHeader !== 'undefined') {\r\n    const splittedStr = bearerHeader.split(' ');\r\n    const [, token] = splittedStr;\r\n    req.token = token;\r\n    authenticator.validateToken(token, (err, authData) => {\r\n      if (err) {\r\n        resp.status(403).json({\r\n          success: false,\r\n          message: 'The token you provided is invalid',\r\n        });\r\n      } else {\r\n        req.user = authData;\r\n        console.log(authData, 'authData');\r\n        next();\r\n      }\r\n    });\r\n  } else {\r\n    resp.status(403).json({\r\n      success: false,\r\n      message: 'Restricted to unauthorized users. Provide authentification and try again.',\r\n    });\r\n  }\r\n}\r\n\r\n"]}